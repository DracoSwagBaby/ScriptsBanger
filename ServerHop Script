local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

-- Check PlaceId is valid
local PlaceID = game.PlaceId
if not PlaceID then
    warn("PlaceID is nil. Are you running this in Roblox Studio?")
    return
end

local AllIDs = AllIDs or {}
local nextCursor = ""

local function findAndHopServer()
    local url = "https://games.roblox.com/v1/games/" .. PlaceID .. "/servers/Public?sortOrder=Asc&limit=100"
    if nextCursor ~= "" then
        url = url .. "&cursor=" .. nextCursor
    end

    local success, result = pcall(function()
        return HttpService:JSONDecode(game:HttpGet(url))
    end)

    if success and result.data then
        for _, server in ipairs(result.data) do
            if server.playing < server.maxPlayers and not table.find(AllIDs, server.id) then
                table.insert(AllIDs, server.id)
                TeleportService:TeleportToPlaceInstance(PlaceID, server.id, Players.LocalPlayer)
                return
            end
        end
        nextCursor = result.nextPageCursor or ""
    else
        warn("Failed to fetch servers: " .. tostring(result))
    end
end

-- Start server hopping automatically
while nextCursor ~= nil do
    findAndHopServer()
    wait(1)
end
